<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>공부노트 – 모바일 보안 일반</title>
    <link>urihanl/docs/mobile_security/part1/chap1.mobile_security/</link>
    <description>Recent content in 모바일 보안 일반 on 공부노트</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 11 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="urihanl/docs/mobile_security/part1/chap1.mobile_security/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 모바일 서비스 시 보안 활동</title>
      <link>urihanl/docs/mobile_security/part1/chap1.mobile_security/1.1.common/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>urihanl/docs/mobile_security/part1/chap1.mobile_security/1.1.common/</guid>
      <description>
        
        
        &lt;p&gt;문제를 해결하기 위해서는 문제 정의에서부터 출발을 하여 개별 문제에 대한 해결 방안을 도출하는 식으로 차례대로 접근하는 것이 좋습니다.&lt;/p&gt;
&lt;p&gt;모바일 서비스를 기획한다고 할 때 무엇을 보호해야 하는가? 에 대한 질문에서 시작해야 할 것입니다. 아마도 고객의 정보, 특히 개인식별 정보, 결제 기능이 있다면 개인 신용정보, 결제 정보 등이 그 대상이 될 것입니다. 이러한 것을 정보자산 식별이라 합니다. 보호해야 할 정보자산의 유형, 내용, 생명주기, 관리 현황 등을 파악하는 것으로부터 정보보호 체계 구축의 시발점이 됩니다.&lt;/p&gt;
&lt;p&gt;서비스 아키텍처 설계 시 대부분 클라이언트, 서버 구조가 됩니다. 그 사이에 네트워크 계층이 존재하여 정보를 양자 사이에 주고 받게 됩니다. 정보는 주로 서버에 저장되며, 특히 데이터베이스에 영속성을 가지고 저장되고, 클라이언트, 즉 스마트폰에 깔린 앱에서 그 정보를 요청하고 수신하여 화면에 보여주거나 저장하게 됩니다.&lt;/p&gt;
&lt;p&gt;일련의 데이터의 흐름을 손으로 또는 문서 도구로 정리해 보는 것이 필요합니다. 아마도 서비스 설계 시 한 번쯤 이 과정을 거쳤을 것이며 그렇지 않다면 지금이라도 명확히 해 두는 것이 문제 해결에 도움이 될 것입니다.&lt;/p&gt;
&lt;p&gt;이렇게 보호 대상에 대한 식별이 이루어졌으면 어떻게 보호해야 하는가? 이에 대한 답은 이미 보안전문 기관이나 컨설턴트에 의해 오랫동안 고민되어 왔고 공통 분모가 되는 내용을 취합하여 온라인 상에 제시된 것이 있습니다.&lt;/p&gt;
&lt;p&gt;바로 OWASP mobile project&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;라는 것으로 정리되어 전세계 모바일 앱 개발 시 보안을 고려해야 할 항목에 대한 지침을 제시합니다. 원래는 웹 어플리케이션 보안을 위한 프로젝트로 시작되었지만 다양한 분야(모바일, IoT, 클라우드 등)로 확대되어 여러 분야에 대한 취약점 보완을 위한 지침서로서의 역할을 다하고 있습니다.&lt;/p&gt;
&lt;p&gt;모바일 앱 위험요소에 대한 상위 10개 항목과 설계 및 개발 시 참고할 수 있는 체크리스트를 제공합니다. 이외에도 모바일 보안과 관련한 다양한 정보와 외부 참고 링크를 제공하여 보안관련 업무 시 유용하게 활용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;다음으로 설계, 개발, 시험, 운영 단계에 이르는 일련의 라이프 사이클 과정에서 보안 활동에 대해 살펴봅니다.&lt;/p&gt;
&lt;p&gt;설계 단계에서는 현실적으로 대부분 보안을 고려하지 않는 경우가 많습니다. 비용, 인력, 일정 면에서 자원을 할당하기에 소규모 사업자의 경우 만만치 않기 때문입니다. 보안을 고려하지 않고 개발이 이루어진 경우는 출시 전 시험 단계에서 보안 점검을 진행하게 되는데, 이 때 수정이 상당수 필요하게 되는 경우가 많이 발생합니다. 심각한 문제점이 발견된 경우에는 이를 고치기 위해 사실상 출시가 미루어 지거나 잠재적인 보안위험을 떠안고 출시하게 됩니다.&lt;/p&gt;
&lt;p&gt;설계 단계에서 간과하는 대표적인 것으로는 인증과 암호화 통신에 대한 설계가 잘못된 경우가 많습니다. API 인증 및 권한 확인 과정에서 우회 경로가 많이 발견되는 경우가 발생하는데, 인증 API를 잘못 사용하거나 인증을 불안전하게 설계하는 경우입니다. 또한 암호화 통신의 경우 더 이상 사용하지 말아야 할 취약한 알고리즘을 사용하거나 암호화 키 교환을 안전하지 않은 방식으로 설계하여 암호화 채널을 쉽게 뚫리는 경우가 대표적입니다.&lt;/p&gt;
&lt;p&gt;개발 단계에서는 소스코드 취약점 제거가 대표적인 보안 활동입니다. 버퍼 오버플로우(buffer overflow), 인젝션(Injection attack) 공격 등에 취약하게 개발한 경우 공격자 입장에서도 도구를 사용하여 쉽게 발견할 수 있기 때문에 보안 위협에 노출됩니다. 이외에도 개발 시 로그를 출력하여 디버깅하는 것을 그대로 출시하여 중요한 정보를 노출시키거나 역공학을 통해 노출되는 소스코드 내 하드 코딩 된 중요 정보가 있거나 숨겨진 백도어가 존재하여 출시 후에 뒤늦게 발견되어 위험에 노출되는 경우가 있습니다.&lt;/p&gt;
&lt;p&gt;모바일 앱의 경우에는 웹 서비스와 다르게 앱 내부 소스코드 자체가 노출되는 추가적인 보안 위협이 있습니다. 역공학에 의해 앱 자체의 소스코드가 노출되어 중요 정보나 로직이 노출되거나 플랫폼, 즉 운영체제가 루팅(rooting/jailbreak)되어 스마트폰 내의 정보를 유출하거나 다양한 공격 시도(예: 바이러스 설치)를 할 수 있는 보안위협이 존재합니다. 이러한 위협은 주로 솔루션을 도입하여 해결하는 것이 일반적입니다.
시험 및 배포 단계에서는 출시하기 전에 모의 해킹 또는 침투테스트(Penetration Test)를 외부 전문가를 초청하여 보안성을 확인하는 작업을 진행하기도 합니다. 또는 이에 준하는 보안성 점검을 실시하는 것이 필요합니다. 실제 사용자 중심의 사용 시나리오를 바탕으로 발생할 수 있는 잠재적인 보안 취약점에 대한 발견이 목적이며, 이를 보완함으로써 일차적으로 안전한 서비스 출시가 가능하다고 하겠습니다.&lt;/p&gt;
&lt;p&gt;이렇게, 일련의 모바일 서비스 기획에서부터 출시에 이르기까지 보안과 관련된 활동이 필요한 사항을 언급해 보았습니다.&lt;/p&gt;
&lt;p&gt;이렇게 보안 활동은 출시 이후에 이루어지는 단발적인 활동이 아닌 처음부터 종료까지 지속적으로 경영자와 개발자 모두 참여하여야 제대로 역할을 다 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;정보보호 기술에 대해 소개를 하기에 앞서 금융권 모바일 서비스의 경우에 어떠한 보안 위협 이슈가 있고, 이를 해결하기 위한 대응 조치를 하고 있는 지에 대해 간략히 살펴보고자 합니다. 금융권이 보안 규제가 가장 강한 편이므로 규제 준수를 위한 정보보호 활동이 비교적 모범적으로 운영되고 있으며, 가이드라인이 상당 부분 공통적인 사항이 많기 때문에 참조해 볼만하기 때문입니다.&lt;/p&gt;
&lt;h2 id=&#34;금융권-모바일-서비스-종류-및-구현&#34;&gt;금융권 모바일 서비스 종류 및 구현&lt;/h2&gt;
&lt;p&gt;근래에 금융 서비스는 점차 사용자 편의성 증대를 위해 경쟁적으로 모바일 플랫폼으로 기반으로 옮겨가고 있으며, 기존의 PC 기반 서비스와 함께 대체적으로 양쪽 플랫폼 모두 제공하는 것이 사실상 업계 원칙이 되어가고 있는 실정입니다.&lt;/p&gt;
&lt;p&gt;은행권의 경우 모바일 뱅킹, 증권사의 경우 MTS(Mobile Trading System), 카드사의 경우 앱 카드, 보험은 모바일 보험 등이 서비스로 제공되고 있습니다.&lt;/p&gt;
&lt;p&gt;통계 조사&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;에 따르면, 모바일 금융서비스(모바일 뱅킹, 간편 송금, 간편 결제, 앱 카드 등)은 주로 20~40대, 고소득 층이 이용한다고 합니다. 주로 모바일 뱅킹의 경우 계좌이체와 잔액 조회가 주로 이용되며, 비 대면 계좌 개설, ATM 현금인출 등에도 일부 사용률을 보여주고 있습니다. 또한 2015년 이후 모바일 뱅킹 서비스 이용 건수와 금액이 지속적으로 증가할 것으로 보고 있습니다.&lt;/p&gt;
&lt;p&gt;모바일 서비스를 구현하는 방법은 3가지로 분류할 수 있는데, 네이티브 앱, 웹 앱, 하이브리드 앱 등으로 구분됩니다.&lt;/p&gt;
&lt;p&gt;네이티브 앱 구현 방식의 경우, 스마트폰 운영체제에 적합하도록 개발되며, 안드로이드 폰의 경우 JAVA, 아이폰의 경우 Objective-C, Swift 언어를 이용하여 개발합니다. 네이티브 방식은 기존에는 유일한 구현 방식으로서 해당 플랫폼 사에서 제공하는 안전하고 최적화된 API를 사용하므로 속도가 상대적으로 빠르고 안정적인 반면에 신규 버전이 출시될 경우 이에 맞춰 추가 개발 작업이 요구됩니다.&lt;/p&gt;
&lt;p&gt;웹 앱 구현 방식은 스마트폰 웹 브라우저 상에서 실행되는 방식으로 기존의 PC 환경에서의 웹 브라우저 접속 앱과 거의 동일하다고 볼 수 있습니다. 기기 종류와 상관없이 동일한 앱으로 동작 가능하지만 속도가 상대적으로 느리고 프로그램 환경에 종속적인 단점이 있습니다.&lt;/p&gt;
&lt;p&gt;하이브리드 앱 구현 방식은 네이티브 앱, 웹 앱 구현 방식을 결합한 것으로 양 쪽의 장점을 취한 것이라고 할 수 있습니다. 내부 구현 측면에서는 단순 정보 제공 기능에 대해서는 웹 앱 구현 방식을 따르고, 중요 기능은 네이티브 앱 구현 방식으로 접근하여 성능과 유지보수 편의성을 모두 공략한 방식이라고 할 수 있습니다. 최근에는 하이브리드 앱 구현 방식이 대세가 되어가고 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;모바일-금융-서비스-공격-유형3&#34;&gt;모바일 금융 서비스 공격 유형&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;
&lt;h3 id=&#34;대표적-보안-사건-사고-사례&#34;&gt;대표적 보안 사건, 사고 사례&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;부정 카드 결제 사건&lt;/p&gt;
&lt;p&gt;모바일 금융 서비스의 경우 금액적인 이익 편취 동기 부여가 강한 편이기 때문에 해킹 사건, 사고가 가장 많이 발생하는 편입니다.&lt;/p&gt;
&lt;p&gt;그 중 카드 결제 사건의 경우, 악성 링크를 통해 악성 코드를 배포하고 금융 소비자의 개인정보를 탈취하여 권한 없이 소비자의 카드 결제를 노리는 방식입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../image001.png&#34; alt=&#34;그림1&#34; title=&#34;그림 1 부정 카드 결제 사건의 공격 시나리오&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;개인 정보 유출 사건&lt;/p&gt;
&lt;p&gt;현금 편취 사고와 더불어 많이 발생하는 것이 고객의 개인 정보를 유출하는 사고입니다. 비단 금융 서비스 뿐만 아니라 모바일 기반 일반 서비스의 경우에도 빈번히 발생하는 것으로, 개인 정보가 유출되는 경우 기업의 경우 대외적 신인도 하락과 피해 소송으로 인해 금전적 손실도 크게 발생하므로 파급효과가 큰 편입니다.&lt;/p&gt;
&lt;p&gt;대표적인 사건 시나리오는 보이스 피싱(Voice Phishing) 기법으로 피해자에게 악성 코드를 유포한 후에 해당 악성 코드를 이용하여 대부업체를 사칭하여 금전적 취득을 하는 방식입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../image002.png&#34; alt=&#34;그림2&#34; title=&#34;그림 2 개인 정보 유출 사건의 공격 시나리오&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;공격-유형&#34;&gt;공격 유형&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;스미싱(Smishing) 공격&lt;/p&gt;
&lt;p&gt;최근 해킹 시도 중에 증가하는 유형 중의 하나입니다. 악성 코드가 포함된 문자(SMS) 등을 스마트폰 사용자에게 전달하고 해당 악성 코드를 사용자 스마트 폰에 설치하고 실행하여 부정 금융거래를 시도하는 공격 방식입니다.&lt;/p&gt;
&lt;p&gt;미리 입수 한 개인정보를 이용하여 일반 사용자에게 정상적인 문자로 속여 악성 코드를 은닉하여 전파하면, 선의의 사용자가 문자에 은닉된 악성 코드를 실행하도록 유도하여 금융 거래정보를 탈취하거나 부정 결제하는 기법입니다. 문자 메시지(SMS) 내에는 악성 링크를 포함하여 사용자가 링크를 누르면 해당 주소에 접속하여 악성 코드가 배포되어 설치됩니다.&lt;/p&gt;
&lt;p&gt;이에 대하여 해당 서비스 제공자는 금융 거래 시 백신 프로그램을 이용하여 안전성 여부를 검증하는 것이 필요하며, 일반 사용자도 의심스러운 문자나 메신저를 통해 앱을 설치하는 것을 주의해야 합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;메신저 피싱(Messenger Phishing) 공격&lt;/p&gt;
&lt;p&gt;피싱(Phishing) 공격 중의 하나로서 이 경우에도 미리 입수한 개인정보로 사용자의 메신저 사용 권한을 획득하여, 로그인 후 등록된 메신저 친구를 대상으로 사기 메시지를 전송한 후 대포 통장으로 금품을 요구 후 갈취하는 방식입니다.&lt;/p&gt;
&lt;p&gt;이에 대하여 앞의 공격 방식과 동일하게 대응 조치가 필요하며, 개인 정보가 유출되는 것에 유의해야 합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;파밍(Pharming) 공격&lt;/p&gt;
&lt;p&gt;피싱(Phishing) 방식 보다 진화한 방식으로 인터넷 주소를 변환하는 서버 주소를 변조하여 가짜 유해 사이트로 접속을 유도하는 공격 방식입니다.&lt;/p&gt;
&lt;p&gt;악성 코드 등을 이용하여 접속 사이트 이름 변환 서버의 주소를 변조합니다. (DNS 설정 변조) 일반 사용자는 정상 금융 사이트로 접속을 시도할 경우 DNS 변조로 해당 사이트가 아닌 공격자가 만든 악성 사이트에 접속하게 됩니다.&lt;/p&gt;
&lt;p&gt;이에 대해 서비스 제공자는 스마트폰에서 발생하는 이상 행위를 탐지하거나 도청 장치(Sniffing)를 탐지하는 솔루션을 적용하여 은행 거래의 이상 행위를 탐지하는 시스템으로 모니터링하고 차단하도록 노력해야 할 것입니다. (Anomaly Detection, Fraud Detection System)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스마트폰 운영체제 해킹 공격&lt;/p&gt;
&lt;p&gt;스마트폰 운영체제(Android, iOS)의 관리자 권한을 획득하여 중요 정보를 권한 없이 조회하거나 이용하는 방법으로 대표적으로 Rooting, JailBreak (루팅/ 탈옥)으로 지칭하는 방식입니다.&lt;/p&gt;
&lt;p&gt;대부분은 익명 해커가 앱 마켓에 올린 루팅 앱을 다운로드 및 설치하여 자동으로 루팅 및 탈옥이 되는 방법입니다. 자의적 또는 타의적으로 설치된 경우 권한 상승 된 스마트폰을 이용하여, 정보를 유출하거나 기기를 불법으로 조작하는 방법으로 공격이 발생할 수 있습니다.&lt;/p&gt;
&lt;p&gt;이러한 공격에 대비하여 서비스 제공자는 스마트폰이 변조되었는 지 주요 기능 수행 전에 탐지하거나 차단해야 합니다. 이용자도 앱을 설치 할 때 불필요한 권한을 요구하는 지 꼼꼼히 확인하여 의심스러운 앱은 설치하지 않도록 주의하는 것이 필요합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;금융 앱 위 변조 공격&lt;/p&gt;
&lt;p&gt;흔히 리패키징(Re-packaging) 공격으로 불리며, 시중에 배포된 금융 앱을 역 공학(Reverse Engineering)으로 분석하고, 인증을 우회하거나 정당하지 않은 결제가 가능하도록 변조하여 재 배포하는 방식입니다.&lt;/p&gt;
&lt;p&gt;이에 대하여 서비스 제공자는 앱 배포 시에 난독화된(Obfuscation) 형태로 배포하며, 앱 위 변조 방지 솔루션을 통해 주요 기능 수행 전에 위 변조 여부를 탐지하고 차단해야 합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;금융 정보 탈취 공격&lt;/p&gt;
&lt;p&gt;스미싱과 같은 방법이나 메일이나 사설 앱스토어를 통해 배포된 악성 코드를 이용하여 사용자의 입력 정보를 감시하고 금융 정보를 탈취하는 방식입니다.&lt;/p&gt;
&lt;p&gt;이에 대하여 서비스 제공자는 주요 정보 입력 시 입력 정보를 암호화하여 처리하는 보안 키보드 솔루션을 적용하여 정보가 유출되는 것을 차단해야 합니다. 최근 금융 모바일 서비스의 경우 대부분 보안 키보드 솔루션이 적용되어 키보드 입력 시 키 배열이 임의적으로 재 배치된 것을 흔히 볼 수 있습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;모바일-금융-서비스-보안&#34;&gt;모바일 금융 서비스 보안&lt;/h2&gt;
&lt;h3 id=&#34;안전성-확보-조치-방안&#34;&gt;안전성 확보 조치 방안&lt;/h3&gt;
&lt;p&gt;앞서 언급한 모바일 서비스 앱 해킹 시도에 대해 자체 개발 또는 솔루션을 적용하여 대응하는 노력이 필요합니다. 이에 대해 금융권의 경우에는 대표적으로 몇 가지 사실 상 필수적으로 적용하는 안전성 확보 조치를 들 수 있습니다.&lt;/p&gt;
&lt;p&gt;각종 바이러스 및 멀웨어(Malware)를 차단하고 이용자의 정보를 외부에 전송하는 것을 막기 위한 것으로 백신 프로그램을 사용하며, 인증 시 이용자 신원 확인을 증명하기 위해 공인인증서 등의 PKI 기술을 사용하며, 계좌 비밀번호 등의 입력을 보호하기 위하여 보안 키보드를 적용하고, 금융거래 데이터를 보호하기 위해 앱 위 변조 방지 솔루션 등을 적용하도록 하고 있습니다.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Mobile_Security_Project&#34;&gt;https://www.owasp.org/index.php/OWASP_Mobile_Security_Project&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;모바일 금융서비스 이용행태 조사결과, 한국은행, 2019.5&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;모바일 금융서비스의 최근 이슈 및 발전 방향, 한국은행, 2019.10&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

      </description>
    </item>
    
  </channel>
</rss>
